openapi: 3.1.1
info:
  title: Contracts JSON:API
  description: |
    API for managing contract information in the Elhub system.
    Contracts represent agreements on metering points in the Elhub system and is used to represent a variety of different relationships
    that can exist on a metering point. Norgespris is a type of contract in the Elhub information model.
  version: 0.0.1
  contact:
    name: team-wow
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
security:
  - bearerAuth: []
servers:
  - url: /v1
paths:
  /contracts:
    get:
      summary: Get all contracts
      description: |
        Get all contracts which you (as a market party or end user) are entitled to view.
        In almost all cases, this means you must have a valid contract on the metering point in order to retrieve information about it.
      operationId: getContracts
      parameters:
        - $ref: "#/components/parameters/Sender"
        - $ref: "#/components/parameters/OnBehalfOf"
        - name: filter[contractType]
          in: query
          description: Filter by contract type. This is used to retrieve all records of a specific type; e.g., all contracts of type Norgespris.
          required: false
          schema:
            type: string
            enum: [Norgespris]
        - name: filter[meteringPointId]
          in: query
          description: Filter list by metering point IDs. This is used to retrieve records based on the metering point ID.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: filter[updatedAt][gt]
          in: query
          description: Filter contracts updated after this timestamp (RFC 3339)
          required: false
          schema:
            type: string
            format: date-time
        - name: filter[updatedAt][lt]
          in: query
          description: Filter contracts updated before this timestamp (RFC 3339)
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successfully get contracts
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ContractResponse"
              examples:
                success:
                  summary: Example response for get all contracts
                  value:
                    data:
                      - type: contract
                        id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                        attributes:
                          contractType: Norgespris
                          startDate: "2026-01-01"
                          endDate: "2026-12-31"
                        relationships:
                          updatedBy:
                            data:
                              type: Party
                              id: "GLN1234567890123"
                          meteringPoint:
                            data:
                              type: MeteringPoint
                              id: "845123456789323423"
                    meta:
                      createdAt: "2026-01-01T00:00:00Z"
                      updatedAt: "2026-06-01T00:00:00Z"
        "400":
          description: Bad Request - When the request is invalid
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAttributes:
                  $ref: "#/components/examples/missingAttributes"
                missingRelationships:
                  $ref: "#/components/examples/missingRelationships"
                missingStatus:
                  $ref: "#/components/examples/missingStatus"
                invalidEndDate:
                  $ref: "#/components/examples/invalidEndDate"
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  $ref: "#/components/examples/internalError"
    post:
      summary: Create a contract
      description: Create one or more contracts linked to meteringPointId(s).
      operationId: createContracts
      parameters:
        - $ref: "#/components/parameters/Sender"
        - $ref: "#/components/parameters/OnBehalfOf"
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ContractRequest"
            examples:
              createContracts:
                summary: Example request for creating contracts
                value:
                  data:
                    - type: contract
                      attributes:
                        contractType: Norgespris
                        startDate: "2026-01-01"
                        endDate: "2026-12-31"
                      relationships:
                        createdBy:
                          data:
                            type: Party
                            id: "GLN1234567890123"
                        meteringPoint:
                          data:
                            type: MeteringPoint
                            id: "845123456789323423"
      responses:
        "201":
          description: Successfully created contract
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ContractResponse"
              examples:
                created:
                  summary: Example response for created contract
                  value:
                    data:
                      - type: contract
                        id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                        attributes:
                          contractType: Norgespris
                          startDate: "2026-01-01"
                          endDate: "2026-12-31"
                        relationships:
                          updatedBy:
                            data:
                              type: Party
                              id: "GLN1234567890123"
                          meteringPoint:
                            data:
                              type: MeteringPoint
                              id: "845123456789323423"
                    meta:
                      createdAt: "2026-01-01T00:00:00Z"
                      updatedAt: "2026-06-01T00:00:00Z"
        "400":
          description: Bad Request - When the request is invalid
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAttributes:
                  $ref: "#/components/examples/missingAttributes"
                missingRelationships:
                  $ref: "#/components/examples/missingRelationships"
                missingStatus:
                  $ref: "#/components/examples/missingStatus"
                invalidEndDate:
                  $ref: "#/components/examples/invalidEndDate"
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized"
        "403":
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorizedStatusUpdate:
                  $ref: "#/components/examples/unauthorizedStatusUpdate"
                endUserRestrictedFieldUpdate:
                  $ref: "#/components/examples/endUserRestrictedFieldUpdate"
        "409":
          description: Conflict - When the contract already exists
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                contractAlreadyExists:
                  $ref: "#/components/examples/contractAlreadyExists"
                meteringPointMismatch:
                  $ref: "#/components/examples/meteringPointMismatch"
                contractTypeMismatch:
                  $ref: "#/components/examples/contractTypeMismatch"
                invalidStatusTransition:
                  $ref: "#/components/examples/invalidStatusTransition"
        "500":
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  $ref: "#/components/examples/internalError"
    patch:
      summary: Update contracts
      description: Update a set of contracts.
      operationId: updateContracts
      parameters:
        - $ref: "#/components/parameters/Sender"
        - $ref: "#/components/parameters/OnBehalfOf"
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/ContractRequest"
            examples:
              updateContracts:
                summary: Example request for updating contracts
                value:
                  data:
                    - type: contract
                      id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                      attributes:
                        contractType: Norgespris
                        startDate: "2026-01-01"
                        endDate: "2026-12-31"
                      relationships:
                        updatedBy:
                          data:
                            type: Party
                            id: "GLN1234567890123"
      responses:
        "200":
          description: Successfully updated contract
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ContractResponse"
              examples:
                updated:
                  summary: Example response for updated contracts
                  value:
                    data:
                      - type: contract
                        id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                        attributes:
                          contractType: Norgespris
                          startDate: "2026-01-01"
                          endDate: "2026-12-31"
                        relationships:
                          updatedBy:
                            data:
                              type: Party
                              id: "GLN1234567890123"
                          meteringPoint:
                            data:
                              type: MeteringPoint
                              id: "845123456789323423"
                    meta:
                      createdAt: "2026-01-01T00:00:00Z"
                      updatedAt: "2026-06-01T00:00:00Z"
        "400":
          description: Bad Request - When the request is invalid
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAttributes:
                  $ref: "#/components/examples/missingAttributes"
                missingRelationships:
                  $ref: "#/components/examples/missingRelationships"
                missingStatus:
                  $ref: "#/components/examples/missingStatus"
                invalidEndDate:
                  $ref: "#/components/examples/invalidEndDate"
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized"
        "403":
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorizedStatusUpdate:
                  $ref: "#/components/examples/unauthorizedStatusUpdate"
                endUserRestrictedFieldUpdate:
                  $ref: "#/components/examples/endUserRestrictedFieldUpdate"
        "409":
          description: Conflict - When trying to update with conflicting data
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                contractAlreadyExists:
                  $ref: "#/components/examples/contractAlreadyExists"
                meteringPointMismatch:
                  $ref: "#/components/examples/meteringPointMismatch"
                contractTypeMismatch:
                  $ref: "#/components/examples/contractTypeMismatch"
                invalidStatusTransition:
                  $ref: "#/components/examples/invalidStatusTransition"
        "500":
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  $ref: "#/components/examples/internalError"
        "404":
          description: Not Found - Contract not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                contractNotFound:
                  $ref: "#/components/examples/contractNotFound"
                contractNotFoundForMeteringPoint:
                  $ref: "#/components/examples/contractNotFoundForMeteringPoint"
  /contracts/{contractId}:
    get:
      summary: Get a single contract by ID
      description: Get a single contract entity identified by ID.
      operationId: getContractById
      parameters:
        - name: contractId
          in: path
          description: The ID of the contract to retrieve.
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Sender"
        - $ref: "#/components/parameters/OnBehalfOf"
      responses:
        "200":
          description: Successfully get contract by ID
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ContractResponse"
              examples:
                success:
                  summary: Example response for get contract by ID
                  value:
                    data:
                      - type: contract
                        id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                        attributes:
                          contractType: Norgespris
                          startDate: "2026-01-01"
                          endDate: "2026-12-31"
                        relationships:
                          updatedBy:
                            data:
                              type: Party
                              id: "GLN1234567890123"
                          meteringPoint:
                            data:
                              type: MeteringPoint
                              id: "845123456789323423"
                    meta:
                      createdAt: "2026-01-01T00:00:00Z"
                      updatedAt: "2026-06-01T00:00:00Z"
        "400":
          description: Bad Request - When the request is invalid
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAttributes:
                  $ref: "#/components/examples/missingAttributes"
                missingRelationships:
                  $ref: "#/components/examples/missingRelationships"
                missingStatus:
                  $ref: "#/components/examples/missingStatus"
                invalidEndDate:
                  $ref: "#/components/examples/invalidEndDate"
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  $ref: "#/components/examples/internalError"
    patch:
      summary: Update a contract by ID
      description: Update a contract entity identified by ID.
      operationId: patchContractById
      parameters:
        - name: contractId
          in: path
          description: The ID of the contract to update.
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Sender"
        - $ref: "#/components/parameters/OnBehalfOf"
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/SingleContractRequest"
            examples:
              updateSingleContract:
                summary: Example request for updating a single contract
                value:
                  data:
                    type: contract
                    id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                    attributes:
                      contractType: Norgespris
                      startDate: "2026-01-01"
                      endDate: "2026-12-31"
                    relationships:
                      updatedBy:
                        data:
                          type: Party
                          id: "GLN1234567890123"
      responses:
        "200":
          description: Successfully updated contract
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ContractResponse"
              examples:
                updated:
                  summary: Example response for updated contract by ID
                  value:
                    data:
                      - type: contract
                        id: "4ef727d1-b672-4166-a973-aa6e412b09bb"
                        attributes:
                          contractType: Norgespris
                          startDate: "2026-01-01"
                          endDate: "2026-12-31"
                        relationships:
                          updatedBy:
                            data:
                              type: Party
                              id: "GLN1234567890123"
                          meteringPoint:
                            data:
                              type: MeteringPoint
                              id: "845123456789323423"
                    meta:
                      createdAt: "2026-01-01T00:00:00Z"
                      updatedAt: "2026-06-01T00:00:00Z"
        "400":
          description: Bad Request - When the request is invalid
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAttributes:
                  $ref: "#/components/examples/missingAttributes"
                missingRelationships:
                  $ref: "#/components/examples/missingRelationships"
                missingStatus:
                  $ref: "#/components/examples/missingStatus"
                invalidEndDate:
                  $ref: "#/components/examples/invalidEndDate"
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized"
        "403":
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorizedStatusUpdate:
                  $ref: "#/components/examples/unauthorizedStatusUpdate"
                endUserRestrictedFieldUpdate:
                  $ref: "#/components/examples/endUserRestrictedFieldUpdate"
        "409":
          description: Conflict - When trying to update with conflicting data
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                contractAlreadyExists:
                  $ref: "#/components/examples/contractAlreadyExists"
                meteringPointMismatch:
                  $ref: "#/components/examples/meteringPointMismatch"
                contractTypeMismatch:
                  $ref: "#/components/examples/contractTypeMismatch"
                invalidStatusTransition:
                  $ref: "#/components/examples/invalidStatusTransition"
        "500":
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  $ref: "#/components/examples/internalError"
        "404":
          description: Not Found - Contract not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                contractNotFound:
                  $ref: "#/components/examples/contractNotFound"
                contractNotFoundForMeteringPoint:
                  $ref: "#/components/examples/contractNotFoundForMeteringPoint"
components:
  parameters:
    Sender:
      name: Sender
      in: header
      description: Global Location Number (GLN) of the requesting party
      schema:
        type: string
        pattern: "^[0-9]{13}$"
    OnBehalfOf:
      name: On-Behalf-Of
      in: header
      description: Global Location Number (GLN) of the party on whose behalf the request is made
      schema:
        type: string
        pattern: "^[0-9]{13}$"
  schemas:
    ContractResponse:
      allOf:
        - $ref: "./schemas/norgespris-contract-response.schema.json#/definitions/response"
    ContractRequest:
      allOf:
        - $ref: "./schemas/norgespris-contract-request.schema.json#/definitions/request"
    SingleContractRequest:
      allOf:
        - $ref: "./schemas/norgespris-single-contract-request.schema.json#/definitions/request"
    Contract:
      allOf:
        - $ref: "./schemas/norgespris-contract.schema.json#/definitions/contract"
    ContractAttributes:
      allOf:
        - $ref: "./schemas/norgespris-contract-attributes.schema.json#/definitions/attributes"
    ContractStatus:
      allOf:
        - $ref: "./schemas/contract-status.schema.json#/definitions/contract-status"
    ContractStatusAttributes:
      allOf:
        - $ref: "./schemas/contract-status-attributes.schema.json#/definitions/attributes"
    ContractStatusRelationships:
      allOf:
        - $ref: "./schemas/contract-status-relationships.schema.json#/definitions/relationships"
    Meta:
      allOf:
        - $ref: "./schemas/norgespris-contract-meta.schema.json#/definitions/meta"
    Error:
      allOf:
        - $ref: "./schemas/json-api-error.schema.json#/definitions/error"
    Relationships:
      allOf:
        - $ref: "./schemas/norgespris-contract-relationships.schema.json#/definitions/relationships"
  examples:
    missingAttributes:
      summary: Missing Attributes in Contract Creation
      value:
        status: "400"
        code: "INVALID_INPUT"
        title: "Missing Attributes in Contract Creation"
        detail: "No attributes has been detected."
        source:
          pointer: "/data/attributes"
    missingRelationships:
      summary: Missing Relationships in Contract Creation
      value:
        status: "400"
        code: "INVALID_INPUT"
        title: "Missing Relationships in Contract Creation"
        detail: "Relationships can't be empty."
        source:
          pointer: "/data/relationships"
    missingStatus:
      summary: Missing Status in Contract Update
      value:
        status: "400"
        code: "INVALID_INPUT"
        title: "Missing Status in Contract Update"
        detail: "Status is required."
        source:
          pointer: "/data/attributes/status"
    invalidEndDate:
      summary: End Date is before Start Date
      value:
        status: "400"
        code: "INVALID_END_DATE"
        title: "End Date is before Start Date"
        detail: "endDate must be after or equal to startDate."
        source:
          pointer: "/data/attributes/endDate"
    unauthorized:
      summary: Unauthorized
      value:
        status: "401"
        code: "EHXXXX"
        title: "Unauthorized"
        detail: "Authentication credentials are missing or invalid."
    unauthorizedStatusUpdate:
      summary: Unauthorized Status Update by User
      value:
        status: "403"
        code: "INVALID_STATUS_UPDATE"
        title: "Unauthorized Status Update by User"
        detail: "User GLN1234567890123 is not authorized to update status to Activated."
        source:
          pointer: "/data/attributes/status"
    endUserRestrictedFieldUpdate:
      summary: End User Restricted Field Update
      value:
        status: "403"
        code: "END_USER_RESTRICTED_FIELD_UPDATE"
        title: "End User Restricted Field Update"
        detail: "End user GLN1234567890123 is not allowed to update startDate."
        source:
          pointer: "/data/attributes/startDate"
    contractAlreadyExists:
      summary: Contract Already Exists
      value:
        status: "409"
        code: "CONTRACT_ALREADY_EXISTS"
        title: "Contract Already Exists"
        detail: "Contract for metering point: 845123456789323423 with contract type: Norgespris already exists."
        source:
          pointer: "/data/relationships/meteringPoint"
    meteringPointMismatch:
      summary: Mismatched Metering Point in Contract Update
      value:
        status: "409"
        code: "METERING_POINT_MISMATCH"
        title: "Mismatched Metering Point in Contract Update"
        detail: "Contract metering point ID does not match update request."
        source:
          pointer: "/data/relationships/meteringPoint"
    contractTypeMismatch:
      summary: Mismatched Contract Type in Update
      value:
        status: "409"
        code: "CONTRACT_TYPE_MISMATCH"
        title: "Mismatched Contract Type in Update"
        detail: "Contract type Norgespris does not match update request type GridAccessContract."
        source:
          pointer: "/data/attributes/contractType"
    invalidStatusTransition:
      summary: Invalid Contract Status Transition
      value:
        status: "409"
        code: "INVALID_STATUS_TRANSITION"
        title: "Invalid Contract Status Transition"
        detail: "Cannot transition contract status from Initiated to Expired for metering point 845123456789323423."
        source:
          pointer: "/data/attributes/status"
    contractNotFound:
      summary: Contract Not Found for Update
      value:
        status: "404"
        code: "CONTRACT_NOT_FOUND"
        title: "Contract Not Found for Update"
        detail: "Contract not found for ID: 4ef727d1-b672-4166-a973-aa6e412b09bb"
        source:
          pointer: "/data/id"
    contractNotFoundForMeteringPoint:
      summary: No Contract Found for Metering Point
      value:
        status: "404"
        code: "CONTRACT_NOT_FOUND_FOR_METERING_POINT"
        title: "No Contract Found for Metering Point"
        detail: "No contract found for metering point: 845123456789323423, contract type: Norgespris, user: GLN1234567890123"
        source:
          pointer: "/data/relationships/meteringPoint"
    internalError:
      summary: Internal error – try again
      value:
        status: "500"
        code: "EHXXXX"
        title: "Internal error – try again"
        detail: "An unexpected error occurred. Please try again later."
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
